# network architecture
# encoder related
encoder: conformer
encoder_conf:
    output_size: 512    # dimension of attention
    attention_heads: 8
    linear_units: 2048  # the number of units of position-wise feed forward
    num_blocks: 24      # the number of encoder blocks
    dropout_rate: 0.1
    positional_dropout_rate: 0.0
    attention_dropout_rate: 0.0
    input_layer: conv2d6 # encoder input type, you can chose conv2d, conv2d6 and conv2d8
    normalize_before: true
    cnn_module_kernel: 15
    use_cnn_module: True
    activation_type: 'swish'
    macaron_style: True
    pos_enc_layer_type: 'rel_pos'
    selfattention_layer_type: 'rel_selfattn'
    cnn_module_norm: 'layer_norm'

# decoder related
decoder: transformer
decoder_conf:
    attention_heads: 4
    linear_units: 1024
    num_blocks: 1
    dropout_rate: 0.1
    positional_dropout_rate: 0.0
    self_attention_dropout_rate: 0.0
    src_attention_dropout_rate: 0.0

# hybrid CTC/attention
model_conf:
    ctc_weight: 0.7
    lsm_weight: 0.1     # label smoothing option
    length_normalized_loss: false

raw_wav: False

collate_conf:
    spec_aug: True
    # specaugmentation related
    spec_aug_conf:
        warp_for_time: True
        num_t_mask: 2
        num_f_mask: 2
        max_t: 50
        max_f: 10
        max_w: 80

# dataset related
dataset_conf:
    max_length: 4000
    min_length: 0
    max_frames_in_batch: 15000
    batch_type: 'static' # static or dynamic
    batch_size: 10
    sort: true

grad_clip: 5
accum_grad: 1
max_epoch: 100
log_interval: 100

optim: adam
optim_conf:
    lr: 0.0004
scheduler: warmuplr     # pytorch v1.1.0+ required
scheduler_conf:
    warmup_steps: 15000

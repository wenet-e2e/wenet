import os
import argparse

def postprocess_scp(args):
    # process the scp file generated by local/wsj_data_prep.sh
    src_path, splits = args.src, args.splits
    for split in splits:
        scp_file_old = os.path.join(src_path, split, "wav.scp")
        os.rename(scp_file_old, os.path.join(src_path, split, "wav_old.scp"))
        scp_file = os.path.join(src_path, split, "wav.scp")
        with open(scp_file_old.replace("wav.scp", "wav_old.scp"), "r") as f:
            for line in f.readlines():
                line_list = line.strip().split(" ")
                wav_id, file_path = line_list[0], line_list[-1], " ".join(line_list[1:])
                new_path = file_path.replace(".wv1", ".wav")
                with open(scp_file, "a") as t:
                    t.write(wav_id + " " + new_path + "\n")
        print("processing is done!!!")


def sph2pipe(args):
    # Convert the original file in sphere format to wav format
    src_path, splits = args.src, args.splits
    for split in splits:
        scp_file_old = os.path.join(src_path, split, "wav_old.scp")
        with open(scp_file_old, "r") as f:
            for line in f.readlines():
                line_list = line.strip().split(" ")
                file_path, cmd = line_list[0], line_list[-1], " ".join(line_list[1:])
                new_path = file_path.replace(".wv1", ".wav")
                ## convert the format of original file from sphere to wav using sph2pipe toolkit 
                cmd_line = " ".join([cmd, new_path])
                os.system(f"{cmd_line}")
        print("Converting is done!!!, remove the old scp file...")
        # os.remove(scp_file_old)


if __name__ == '__main__':

    parser = argparse.ArgumentParser(description='process the wav.scp file')
    parser.add_argument('--src', required=True, help='path of data in src')
    parser.add_argument('--splits', help='config file', default=["train_si284","test_dev93"])
    args = parser.parse_args()

    postprocess_scp(args)
    # to convert the format (optional)
    # sph2pipe(args)



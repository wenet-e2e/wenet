name: Build Wheels

on:
  workflow_dispatch:

env:
  BINDING_DIR: runtime/binding/python
  FC_BASE_DIR: runtime/binding/python/fc_base

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Cache FC Base
        uses: actions/cache@v3
        with:
          path: ${{ env.FC_BASE_DIR }}
          key: ${{ runner.os }}-fc-base

      - uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-build

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3
        with:
          python-version: '3.6'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.5.0
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: "cp36-* cp37-* cp38-* cp39-*"
          # Disable building PyPy wheels on all platforms
          # Skip 32-bit builds
          CIBW_SKIP: "pp* *-win32 *-manylinux_i686 *-musllinux_*"
          # For MacOS, please see: https://github.com/pypa/cibuildwheel/issues/816
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: >
            REPAIR_LIBRARY_PATH=$FC_BASE_DIR/libtorch-src/lib:$FC_BASE_DIR/openfst-subbuild/openfst-populate-prefix/lib &&
            DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-listdeps {wheel} &&
            DYLD_LIBRARY_PATH=$REPAIR_LIBRARY_PATH delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}
        with:
          package-dir: ${{ env.BINDING_DIR }}
          output-dir: wheelhouse

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: ./wheelhouse/

